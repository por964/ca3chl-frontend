{"version":3,"sources":["settings.js","apiFacade.js","jokes.js","header.js","loggedin.js","userFacade.js","userSettings.js","App.js","index.js"],"names":["mainURL","URL","handleHttpErrors","res","ok","json","Promise","reject","status","fullError","facade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","login","user","password","a","options","makeOptions","username","fetch","res_1","fetchUserData","fetchAdminData","method","addToken","body","opts","headers","JSON","stringify","logout","removeItem","apiFacade","TwoJokes","useState","jokes","setJokes","joke1","joke1Reference","joke2","joke2Reference","class","onClick","then","data","Header","isLoggedin","loginMsg","className","exact","activeClassName","to","Fragment","LoggedIn","dataFromServer","setDataFromServer","useEffect","msg","userfacade","sendUpdate","mail","telno","userFacade","SetUserInfo","infoDetails","setInfoDetails","errorMessage","setErrorMessage","updateInfo","catch","error","err","message","console","log","onChange","evt","target","id","value","placeholder","preventDefault","userid","LogIn","loginCredentials","setLoginCredentials","Home","Jokes","NoMatch","App","setLoggedIn","path","pass","AppWithRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbb5028c.chunk.js","sourcesContent":["const mainURL = \"https://www.claesvonh.dk/ca3chl\";\r\n\r\nexport default mainURL;","import mainURL from \"./settings\";\r\n\r\nconst URL = mainURL;\r\n\r\nfunction handleHttpErrors(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject({ status: res.status, fullError: res.json() })\r\n  }\r\n  return res.json();\r\n}\r\n\r\nfunction apiFacade() {\r\n  const setToken = (token) => {\r\n    localStorage.setItem('jwtToken', token)\r\n  }\r\n  const getToken = () => {\r\n    return localStorage.getItem('jwtToken')\r\n  }\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() != null;\r\n    return loggedIn;\r\n  }\r\n  const logout = () => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  }\r\n\r\n  const login = async (user, password) => {\r\n    const options = makeOptions(\"POST\", true, { username: user, password: password });\r\n    const res = await fetch(URL + \"/api/login\", options);\r\n    const res_1 = await handleHttpErrors(res);\r\n    setToken(res_1.token);\r\n  }\r\n\r\n  const fetchUserData = async () => {\r\n    const options = makeOptions(\"GET\", true); //True add's the token\r\n    const res = await fetch(URL + \"/api/info/user\", options);\r\n    return handleHttpErrors(res);\r\n  }\r\n\r\n  const fetchAdminData = async () => {\r\n    const options = makeOptions(\"GET\", true); //True add's the token\r\n    const res = await fetch(URL + \"/api/info/admin\", options);\r\n    return handleHttpErrors(res);\r\n  }\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        'Accept': 'application/json',\r\n        'Origin': '*'\r\n      }\r\n    }\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  }\r\n  return {\r\n    makeOptions,\r\n    setToken,\r\n    getToken,\r\n    loggedIn,\r\n    login,\r\n    logout,\r\n    fetchUserData,\r\n    fetchAdminData,\r\n  }\r\n}\r\nconst facade = apiFacade();\r\nexport default facade;\r\n","import mainURL from \"./settings\";\r\nimport { useState } from \"react\";\r\n\r\nconst TwoJokes = () => {\r\n    const [jokes, setJokes] = useState(\"\");\r\n    const GetJokes = () => {\r\n        fetch(mainURL + \"/api/jokes/parallel\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setJokes(data);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>Dad joke:</h2>\r\n            <ul>\r\n                <li>{jokes.joke1}</li>\r\n                <li>Link: {jokes.joke1Reference}</li>\r\n            </ul>\r\n            <h2>Chuck Norris joke:</h2>\r\n            <ul>\r\n                <li>{jokes.joke2}</li>\r\n                <li>Link: {jokes.joke2Reference}</li>\r\n            </ul>\r\n            <br />\r\n            <button class=\"btn btn-primary\" onClick={() => GetJokes()}>Press for two new jokes</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TwoJokes;","import { NavLink } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nexport default function Header({ isLoggedin, loginMsg }) {\r\n    return (\r\n        <ul className=\"header\">\r\n            <li><NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink></li>\r\n            {isLoggedin && (\r\n                <React.Fragment>\r\n                    <li><NavLink activeClassName=\"active\" to=\"/jokes\">Jokes</NavLink></li>\r\n                    <li><NavLink activeClassName=\"active\" to=\"/user-settings\">Admin </NavLink></li>\r\n                    <li><NavLink activeClassName=\"active\" to=\"/new-function\">New function </NavLink></li>\r\n                    <li><NavLink activeClassName=\"active\" to=\"/user-info\">User info </NavLink></li>\r\n                </React.Fragment>\r\n            )}\r\n            <li><NavLink activeClassName=\"active\" to=\"/login-out\"> {loginMsg}  </NavLink></li>\r\n\r\n\r\n        </ul>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport facade from \"./apiFacade\";\r\n\r\n\r\nexport default function LoggedIn() {\r\n    const [dataFromServer, setDataFromServer] = useState(\"Loading...\")\r\n\r\n    useEffect(() => {\r\n        facade.fetchUserData().then(data => setDataFromServer(data.msg));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        facade.fetchAdminData().then(data => setDataFromServer(data.msg));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>{dataFromServer} </h2>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import mainURL from \"./settings\";\r\n\r\n\r\nfunction handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject({ status: res.status, fullError: res.json() })\r\n    }\r\n    return res.json();\r\n}\r\n\r\nfunction userFacade() {\r\n\r\n\r\n    const sendUpdate = async (user, mail, telno) => {\r\n        const options = makeOptions(\"POST\", { mail: mail, telno: telno });\r\n        const res = await fetch(mainURL + \"/api/info/\" + user, options);\r\n        return handleHttpErrors(res);\r\n    }\r\n\r\n    const makeOptions = (method, body) => {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }\r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n    return {\r\n        makeOptions,\r\n        sendUpdate\r\n    }\r\n}\r\n\r\nconst userfacade = userFacade();\r\nexport default userfacade;","import userfacade from './userFacade';\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport default function SetUserInfo() {\r\n    const init = { user: \"\", mail: \"\", telno: \"\" };\r\n    const [infoDetails, setInfoDetails] = useState(init);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n\r\n    const sendInfo = (evt) => {\r\n        evt.preventDefault();\r\n        updateInfo(infoDetails.userid, infoDetails.mail, infoDetails.telno);\r\n    }\r\n\r\n    const onChange = (evt) => {\r\n        setInfoDetails({ ...infoDetails, [evt.target.id]: evt.target.value })\r\n    }\r\n\r\n    const updateInfo = (user, mail, telno) => {\r\n        userfacade.sendUpdate(user, mail, telno)\r\n            .then((res) => {\r\n            }).catch((error) => {\r\n                error.fullError.then((err) => {\r\n                    setErrorMessage(err.message);\r\n                    console.log(\"Error: \", errorMessage);\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update your contact info</h2>\r\n            <form className=\"col-sm-1\" onChange={onChange} >\r\n                <input className=\"form-control\" placeholder=\"UserID\" id=\"userid\" />\r\n                <input className=\"form-control\" placeholder=\"Email\" id=\"mail\" />\r\n                <input className=\"form-control\" placeholder=\"Phone no\" id=\"telno\" />\r\n                <br />\r\n                <button className=\"btn btn-primary\" onClick={sendInfo}>Send update</button>\r\n            </form>\r\n            <h2>{errorMessage}</h2>\r\n        </div>\r\n    )\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from \"react\"\r\nimport facade from \"./apiFacade\";\r\nimport TwoJokes from './jokes';\r\nimport Header from './header';\r\nimport LoggedIn from './loggedin';\r\nimport SetUserInfo from './userSettings';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  useRouteMatch,\r\n  Prompt,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\nconst logout = () => {\r\n    facade.logout();\r\n    setLoggedIn(false);\r\n}\r\n\r\nconst login = (user, pass) => {\r\n    facade.login(user, pass)\r\n        .then((res) => {\r\n            setLoggedIn(true);\r\n        }).catch((error) => {\r\n            error.fullError.then((err) => {\r\n                setErrorMessage(err.message);\r\n                console.log(\"Error: \", errorMessage);\r\n            })\r\n        })\r\n}\r\n\r\n  return (\r\n\r\n    <div className=\"col-sm\">\r\n      <Header loginMsg={loggedIn ? 'You are logged in' : 'Please log in'} isLoggedin={loggedIn} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n        <Home />\r\n        </Route>\r\n        <Route path='/login-out'>\r\n          {!loggedIn ? (\r\n            <LogIn errorMessage={errorMessage} setErrorMessage={setErrorMessage} login={login} />\r\n          ) : (\r\n              <div>\r\n                <LoggedIn />\r\n                <button className=\"btn btn-primary\" onClick={logout}>Logout</button>\r\n              </div>\r\n            )}\r\n        </Route>\r\n        <Route path=\"/user-info\">\r\n        <SetUserInfo />\r\n        </Route>\r\n        <Route path=\"/jokes\">\r\n        <Jokes />\r\n        </Route>\r\n        <Route path=\"*\">\r\n        <NoMatch />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction LogIn({ login, errorMessage }) {\r\n    const init = { username: \"\", password: \"\" };\r\n    const [loginCredentials, setLoginCredentials] = useState(init);\r\n\r\n\r\n    const performLogin = (evt) => {\r\n        evt.preventDefault();\r\n        login(loginCredentials.username, loginCredentials.password);\r\n    }\r\n\r\n    const onChange = (evt) => {\r\n        setLoginCredentials({ ...loginCredentials, [evt.target.id]: evt.target.value })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n          <h2>Login</h2>\r\n            <form className=\"col-sm-1\" onChange={onChange} >\r\n                    <input className=\"form-control\" placeholder=\"User Name\" id=\"username\" />\r\n                    <input className=\"form-control\" placeholder=\"Password\" id=\"password\" />\r\n                    <br />\r\n                    <button className=\"btn btn-primary\" onClick={performLogin}>Login</button>\r\n            </form>\r\n            <h2>{errorMessage}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NewFunction() {\r\n  return (\r\n    <div>\r\n      <h2>Add new functionality here</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home CHL app</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Jokes() {\r\n  return (\r\n    <div>\r\n      <h2>Two jokes</h2>\r\n      <TwoJokes />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No match found for this.\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst AppWithRouter = () => {\r\n  return (\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  );\r\n};\r\n\r\nReactDOM.render(<AppWithRouter />, document.getElementById(\"root\"));"],"sourceRoot":""}